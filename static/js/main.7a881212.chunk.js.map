{"version":3,"sources":["pages/Home.js","components/item-blog/ItemBlog.js","pages/Blog.js","containers/BlogContainer.js","actions/blogs.js","constants/actionTypes.js","pages/BlogDetail.js","containers/BlogDetailContainer.js","reducers/blogs.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","to","ItemBlog","props","item","time","tags","id","name","Blog","this","clearCurrentBlog","getListBlog","dispatch","page","perPage","pathGitHubApi","axios","get","then","response","getBlogs","data","err","console","error","blogElements","blogs","map","blog","info","split","join","replace","sha","index","key","React","Component","connect","state","listBlogs","type","marked","setOptions","breaks","renderer","Renderer","link","href","title","text","BlogDetail","match","params","getBlogContent","getBlog","content","log","Base64","decode","convertBlog","markdownText","icon","faLongArrowAltLeft","dangerouslySetInnerHTML","__html","currentBlog","defaultState","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","ReduxThunk","About","App","path","exact","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a881212.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport '../css/home.css';\n\nfunction Home() {\n    return (\n        <div className=\"custom-container custom-container__bg-dark custom-container__flex-box\">\n            <div className=\"avatar\">\n                <div className=\"text--hover\">\n                    <Link className=\"text-item--hover\" to={'/blog'}>My Blog</Link>\n                </div>\n            </div>\n            <div className=\"text\">\n                I'm Duy Nguyen\n            <br />\n                <small className=\"text-description\">developer</small>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nfunction ItemBlog(props) {\n    return (\n        <div className=\"item-blog\">\n            <div>\n                <span className=\"time\">{props.item.time}</span>\n                <span className=\"tag\">{props.item.tags}</span>\n            </div>\n            <div className=\"title-article\">\n                <Link className=\"link-article\" to={`/blog/${props.item.id}`}>{props.item.name}</Link>\n            </div>\n        </div>\n    );\n}\n\nItemBlog.propTypes = {\n    item: PropTypes.shape({\n        time: PropTypes.string.isRequired,\n        tags: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n    })\n};\n\nexport default ItemBlog;\n","import React from 'react';\nimport axios from 'axios';\n\nimport ItemBlog from '../components/item-blog/ItemBlog';\nimport '../css/blog.css';\n\nconst perPage = 10;\n\nexport default class Blog extends React.Component {\n    componentDidMount() {\n        this.props.clearCurrentBlog();\n        this.getListBlog(this.props.dispatch, 1, perPage);\n    }\n\n    getListBlog(dispatch, page, perPage) {\n        const apiGitHub = 'https://api.github.com';\n        const pathGitHubApi = `${apiGitHub}/repos/duysmile/blogs-github/contents/blogs?ref=master&page=${page}&per_page=${perPage}`;\n        return axios.get(pathGitHubApi).then(\n            response => dispatch(this.props.getBlogs(response.data)),\n            err => console.error(err)\n        );\n    }\n\n    render() {\n        const dataBlog = this.props.blogs;\n        const blogs = dataBlog.map(blog => {\n            const info = blog.name.split('.');\n            const name = info[0].split('_').join(' ');\n            const time = info[1].replace(/_/g, '-');\n            const tags = info[2] && info[2].split('_').join(', ');\n            return {\n                name,\n                time: time || '',\n                tags: tags || '',\n                id: blog.sha\n            };\n        });\n        const blogElements = blogs.map((blog, index) => {\n            return (\n                <ItemBlog\n                    key={index}\n                    item={blog}\n                />\n            );\n        });\n\n        return (\n            <div className=\"custom-container custom-container__bg-raisin-black\">\n                <div className=\"box-blog\">\n                    <div className=\"about-me color-black-coral\">\n                        <div className=\"logo\"></div>\n                        <h1 className=\"title\">Duysmile Blog</h1>\n                        <div className=\"author\">\n                            By Duy Nguyen\n                        </div>\n                        <div className=\"description\">\n                            Nơi mình chia sẻ vài điều nho nhỏ về lập trình và cuộc sống.\n                        </div>\n                    </div>\n                    <div className=\"list-blog\">\n                        {blogElements}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\n\nimport { getBlogs, clearCurrentBlog } from '../actions/blogs';\nimport Blog from '../pages/Blog';\n\nconst mapStateToProps = state => ({\n    blogs: state.blogs.listBlogs\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getBlogs: blogs => dispatch(getBlogs(blogs)),\n    clearCurrentBlog: () => dispatch(clearCurrentBlog()),\n    dispatch\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Blog);\n","import { GET_BLOGS, GET_BLOG, CLEAR_CURRENT_BLOG } from '../constants/actionTypes';\n\nexport const getBlogs = blogs => {\n    return {\n        type: GET_BLOGS,\n        blogs\n    };\n};\n\nexport const getBlog = blog => {\n    return {\n        type: GET_BLOG,\n        blog\n    };\n};\n\nexport const clearCurrentBlog = () => {\n    return {\n        type: CLEAR_CURRENT_BLOG\n    };\n};\n","export const GET_BLOGS = 'GET_BLOGS';\nexport const GET_BLOG = 'GET_BLOG';\nexport const CLEAR_CURRENT_BLOG = 'CLEAR_CURRENT_BLOG';\n","import React from 'react';\nimport axios from 'axios';\nimport marked from 'marked';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLongArrowAltLeft } from '@fortawesome/free-solid-svg-icons'\nimport { Base64 } from 'js-base64';\nimport { Link } from \"react-router-dom\";\n\nimport '../css/content.css';\n\nmarked.setOptions({\n    breaks: true,\n});\nconst renderer = new marked.Renderer();\nrenderer.link = (href, title, text) => {\n    return `<a id=\"tribute-link\" href=${href} title=${title}\" target=\"_blank\">${text}</a>`;\n};\n\nfunction convertBlog(blog) {\n    if (!blog || !blog.content) {\n        return '';\n    }\n    console.log(blog);\n    const contentBlog = Base64.decode(blog.content);\n    return contentBlog;\n}\n\nexport default class BlogDetail extends React.Component {\n    componentDidMount() {\n        const id = this.props.match.params.id;\n        this.getBlogContent(this.props.dispatch, id);\n    }\n\n    getBlogContent(dispatch, id) {\n        const apiGitHub = 'https://api.github.com';\n        const pathGitHubApi = `${apiGitHub}/repos/orangetwentyfour/blogs-github/git/blobs/${id}`;\n        return axios.get(pathGitHubApi).then(\n            response => dispatch(this.props.getBlog(response.data)),\n            err => console.error(err)\n        );\n    }\n\n    render() {\n        const blog = convertBlog(this.props.blog);\n        const markdownText = marked(blog, renderer);\n        return (\n            <div className=\"custom-container custom-container__bg-raisin-black blog-content color-black-coral\">\n                <Link className=\"link-back button-back\" to={`/blog`}>\n                    <FontAwesomeIcon icon={faLongArrowAltLeft} />\n                </Link>\n                <div className=\"box-content\" dangerouslySetInnerHTML={{ __html: markdownText }}></div>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\n\nimport { getBlog } from '../actions/blogs';\nimport BlogDetail from '../pages/BlogDetail';\n\nconst mapStateToProps = state => ({\n    blog: state.blogs.currentBlog\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getBlog: blog => dispatch(getBlog(blog)),\n    dispatch\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogDetail);\n","import { GET_BLOGS, GET_BLOG, CLEAR_CURRENT_BLOG } from '../constants/actionTypes';\n\nconst defaultState = {\n    listBlogs: [],\n    currentBlog: {}\n};\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case GET_BLOGS: {\n            return {\n                ...state,\n                listBlogs: action.blogs\n            }\n        }\n        case GET_BLOG: {\n            return {\n                ...state,\n                currentBlog: action.blog\n            }\n        }\n        case CLEAR_CURRENT_BLOG: {\n            return {\n                ...state,\n                currentBlog: {}\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import { combineReducers } from 'redux';\n\nimport blogs from './blogs';\n\nexport default combineReducers({\n    blogs\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport ReduxThunk from 'redux-promise';\n\nimport reducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducer,\n    composeEnhancers(applyMiddleware(ReduxThunk))\n);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Blog from './containers/BlogContainer';\nimport BlogDetail from './containers/BlogDetailContainer';\n\nimport store from './store';\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route exact path=\"/blog\" component={Blog} />\n          <Route path=\"/blog/:id\" component={BlogDetail} />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}