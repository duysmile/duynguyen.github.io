{"version":3,"sources":["pages/Home.js","pages/Blog.js","pages/BlogDetail.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","to","Blog","props","state","blogs","this","getListBlog","dataBlog","data","map","blog","info","name","split","join","time","replace","tags","id","sha","setState","console","error","page","perPage","pathGitHubApi","axios","get","blogElements","index","key","React","Component","marked","setOptions","breaks","renderer","Renderer","link","href","title","text","BlogDetail","content","match","params","getBlogContent","contentBlogData","contentBlog","Base64","decode","log","markdownText","dangerouslySetInnerHTML","__html","About","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d926c4a.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport '../css/home.css';\n\nfunction Home() {\n    return (\n        <div className=\"custom-container custom-container__bg-dark custom-container__flex-box\">\n            <div className=\"avatar\">\n                <div className=\"text--hover\">\n                    <Link className=\"text-item--hover\" to={'/blog'}>My Blog</Link>\n                </div>\n            </div>\n            <div className=\"text\">\n                I'm Duy Nguyen\n            <br />\n                <small className=\"text-description\">developer</small>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\nimport '../css/blog.css';\n\nconst perPage = 10;\n\nexport default class Blog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            blogs: []\n        };\n    }\n\n    async componentDidMount() {\n        try {\n            const dataBlog = await this.getListBlog(1, perPage);\n            const blogs = dataBlog.data.map(blog => {\n                const info = blog.name.split('.');\n                const name = info[0].split('_').join(' ');\n                const time = info[1].replace(/_/g, '-');\n                const tags = info[2] && info[2].split('_').join(', ');\n                return {\n                    name,\n                    time: time || '',\n                    tags: tags || '',\n                    id: blog.sha\n                };\n            });\n\n            this.setState({\n                blogs\n            });\n        } catch (error) {\n            console.error('ERROR', error);\n        }\n    }\n\n    getListBlog(page, perPage) {\n        const apiGitHub = 'https://api.github.com';\n        const pathGitHubApi = `${apiGitHub}/repos/orangetwentyfour/duynguyen.github.io/contents/blogs?ref=master&page=${page}&per_page=${perPage}`;\n        return axios.get(pathGitHubApi);\n    }\n\n    render() {\n        const blogs = this.state.blogs;\n        const blogElements = blogs.map((blog, index) => {\n            return (\n                <div className=\"item-blog\" key={index}>\n                    <div>\n                        <span className=\"time\">{blog.time}</span>\n                        <span className=\"tag\">{blog.tags}</span>\n                    </div>\n                    <div className=\"title-article\">\n                        <Link className=\"link-article\" to={`/blog/${blog.id}`}>{blog.name}</Link>\n                    </div>\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"custom-container custom-container__bg-raisin-black\">\n                <div className=\"box-blog\">\n                    <div className=\"about-me color-black-coral\">\n                        <div className=\"logo\"></div>\n                        <h1 className=\"title\">Torf Blog</h1>\n                        <div className=\"author\">\n                            By Duy Nguyen\n                        </div>\n                        <div className=\"description\">\n                            Nơi mình chia sẻ vài điều nho nhỏ về lập trình và cuộc sống.\n                        </div>\n                    </div>\n                    <div className=\"list-blog\">\n                        { blogElements }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport axios from 'axios';\nimport marked from 'marked';\nimport { Base64 } from 'js-base64';\n\nimport '../css/content.css';\n\nmarked.setOptions({\n    breaks: true,\n});\nconst renderer = new marked.Renderer();\nrenderer.link = (href, title, text) => {\n  return `<a id=\"tribute-link\" href=${href} title=${title}\" target=\"_blank\">${text}</a>`;\n};\n\nexport default class BlogDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: ''\n        };\n    }\n\n    async componentDidMount() {\n        try {\n            const id = this.props.match.params.id;\n            const contentBlogData = await this.getBlogContent(id);\n            const contentBlog = Base64.decode(contentBlogData.data.content);\n            this.setState({\n                content: contentBlog\n            });\n        } catch (error) {\n            console.log('ERROR', error);\n        }\n    }\n\n    getBlogContent(id) {\n        const apiGitHub = 'https://api.github.com';\n        const pathGitHubApi = `${apiGitHub}/repos/orangetwentyfour/duynguyen.github.io/git/blobs/${id}`;\n        return axios.get(pathGitHubApi);\n    }\n\n    render() {\n        const markdownText = marked(this.state.content,renderer);\n        return (\n            <div className=\"custom-container custom-container__bg-raisin-black blog-content color-black-coral\">\n                <div className=\"box-content\" dangerouslySetInnerHTML={{ __html: markdownText }}>\n\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Blog from './pages/Blog';\nimport BlogDetail from './pages/BlogDetail';\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route exact path=\"/blog\" component={Blog} />\n        <Route path=\"/blog/:id\" component={BlogDetail} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}